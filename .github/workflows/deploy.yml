name: Deploy FastAPI to GKE

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Authenticate with GCP
      uses: google-github-actions/auth@v1.1.1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set Up gcloud CLI
      uses: google-github-actions/setup-gcloud@v1.1.1

    - name: Upgrade gcloud CLI
      run: |
        gcloud components update
        gcloud components install gke-gcloud-auth-plugin

    - name: Configure Docker for GCP Artifact Registry
      run: |
        gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

    - name: Install SonarQube Scanner
      run: |
        echo "üîç Fetching SonarQube Scanner..."
        SONAR_VERSION="7.0.0.4796"
        DOWNLOAD_URL="https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_VERSION-linux-x64.zip"
        curl -fSL -o sonar-scanner.zip "$DOWNLOAD_URL"
        unzip sonar-scanner.zip
        sudo mv sonar-scanner-* /opt/sonar-scanner
        echo 'export PATH="/opt/sonar-scanner/bin:$PATH"' | sudo tee -a /etc/profile
        source /etc/profile
        /opt/sonar-scanner/bin/sonar-scanner --version

    - name: Run SonarQube Analysis
      run: |
        /opt/sonar-scanner/bin/sonar-scanner \
        -Dsonar.projectKey=fastapi-backend \
        -Dsonar.sources=. \
        -Dsonar.host.url=http://35.208.148.105:9000 \
        -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}

    - name: Build and Push Docker Image
      env:
        IMAGE_TAG: $GITHUB_SHA
      run: |
        docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/fastapi-repo/fastapi-app:$IMAGE_TAG .
        docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/fastapi-repo/fastapi-app:$IMAGE_TAG

    - name: Authenticate kubectl with GKE
      run: |
        gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --zone ${{ secrets.GKE_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }}

    - name: Deploy to GKE
      run: |
        kubectl apply -f k8s/deployment.yaml --validate=false
        kubectl apply -f k8s/hpa.yaml --validate=false
        kubectl apply -f k8s/service.yaml --validate=false

    - name: Verify Deployment
      run: |
        kubectl rollout status deployment/fastapi-app
